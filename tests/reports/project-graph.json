{
  "graph": {
    "nodes": {
      "october-frontend": {
        "name": "october-frontend",
        "type": "app",
        "data": {
          "root": "packages/integrations/october-implementation/src/frontend",
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "lint",
                "preview"
              ]
            },
            "js": {
              "packageName": "frontend",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                },
                "scriptContent": "tsc -b && vite build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/integrations/october-implementation/src/frontend",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/integrations/october-implementation/src/frontend",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects october-frontend --includeDependentProjects -- pnpm exec nx build-deps october-frontend"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                },
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "october-frontend",
          "tags": [
            "npm:private"
          ],
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/integrations/october-implementation/src/frontend/src",
          "implicitDependencies": []
        }
      },
      "gemini-research-frontend": {
        "name": "gemini-research-frontend",
        "type": "app",
        "data": {
          "root": "packages/integrations/gemini-research-agent/src/frontend",
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "lint",
                "preview"
              ]
            },
            "js": {
              "packageName": "frontend",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                },
                "scriptContent": "tsc -b && vite build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/integrations/gemini-research-agent/src/frontend",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "packages/integrations/gemini-research-agent/src/frontend",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects gemini-research-frontend --includeDependentProjects -- pnpm exec nx build-deps gemini-research-frontend"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                },
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "gemini-research-frontend",
          "tags": [
            "npm:private"
          ],
          "$schema": "../../../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/integrations/gemini-research-agent/src/frontend/src",
          "implicitDependencies": []
        }
      },
      "azizsys-frontend": {
        "name": "azizsys-frontend",
        "type": "app",
        "data": {
          "root": "docs/8_legacy/legacy-apps/web-interface/frontend",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "docs/8_legacy/legacy-apps/web-interface/frontend",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "azizsys-frontend",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "october-implementation": {
        "name": "october-implementation",
        "type": "lib",
        "data": {
          "root": "packages/integrations/october-implementation",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/october-implementation/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/october-implementation",
                "main": "packages/october-implementation/src/index.ts",
                "tsConfig": "packages/october-implementation/tsconfig.lib.json",
                "assets": [
                  "packages/october-implementation/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/october-implementation/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverageReporters": [
                    "text"
                  ]
                }
              },
              "parallelism": true
            }
          },
          "name": "october-implementation",
          "tags": [
            "npm:public",
            "npm:langgraph",
            "npm:research-agent",
            "npm:gemini-ai",
            "npm:intelligent-search",
            "npm:azizsys",
            "scope:packages",
            "type:library",
            "feature:research",
            "feature:ai"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start"
              ]
            },
            "description": "تنفيذ خطة أكتوبر المتكاملة - نظام بحث ذكي مع LangGraph",
            "js": {
              "packageName": "@azizsys/october-implementation",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/october-implementation/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "gemini-research-agent": {
        "name": "gemini-research-agent",
        "type": "lib",
        "data": {
          "root": "packages/integrations/gemini-research-agent",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/gemini-research-agent/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "backend:dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "backend:dev"
              },
              "metadata": {
                "scriptContent": "cd src/backend && python -m uvicorn agent.app:app --reload",
                "runCommand": "pnpm run backend:dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "frontend:dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "frontend:dev"
              },
              "metadata": {
                "scriptContent": "cd src/frontend && npm run dev",
                "runCommand": "pnpm run frontend:dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/gemini-research-agent",
                "main": "packages/gemini-research-agent/src/index.ts",
                "tsConfig": "packages/gemini-research-agent/tsconfig.lib.json",
                "assets": [
                  "packages/gemini-research-agent/*.md",
                  "packages/gemini-research-agent/src/backend/**/*",
                  "packages/gemini-research-agent/src/frontend/**/*"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/gemini-research-agent/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "serve:backend": {
              "executor": "@nx/workspace:run-commands",
              "options": {
                "command": "cd packages/gemini-research-agent/src/backend && python -m uvicorn agent.app:app --reload --port 8000"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve:frontend": {
              "executor": "@nx/workspace:run-commands",
              "options": {
                "command": "cd packages/gemini-research-agent/src/frontend && npm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:build": {
              "executor": "@nx/workspace:run-commands",
              "options": {
                "command": "cd packages/gemini-research-agent && docker build -t gemini-research-agent ."
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:run": {
              "executor": "@nx/workspace:run-commands",
              "options": {
                "command": "cd packages/gemini-research-agent && docker-compose up"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "gemini-research-agent",
          "tags": [
            "npm:public",
            "npm:langgraph",
            "npm:research-agent",
            "npm:gemini-ai",
            "npm:intelligent-search",
            "npm:azizsys",
            "npm:fullstack",
            "npm:react",
            "npm:python",
            "npm:typescript",
            "scope:packages",
            "type:library",
            "feature:research",
            "feature:ai",
            "feature:fullstack"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start",
                "backend:dev",
                "frontend:dev"
              ]
            },
            "description": "نظام البحث الذكي المتقدم مع LangGraph و Gemini AI",
            "js": {
              "packageName": "@azizsys/gemini-research-agent",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/gemini-research-agent/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@g-assistant/web-interface": {
        "name": "@g-assistant/web-interface",
        "type": "lib",
        "data": {
          "root": "docs/8_legacy/legacy-apps/web-interface",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "docs/8_legacy/legacy-apps/web-interface",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant/web-interface",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@azizsys/odoo-integration": {
        "name": "@azizsys/odoo-integration",
        "type": "lib",
        "data": {
          "root": "packages/integrations/odoo-integration",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/integrations/odoo-integration",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/odoo-integration",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev"
              ]
            },
            "description": "Odoo CRM Integration for AzizSys",
            "js": {
              "packageName": "@azizsys/odoo-integration",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@g-assistant/sheets-addon": {
        "name": "@g-assistant/sheets-addon",
        "type": "lib",
        "data": {
          "root": "docs/8_legacy/legacy-apps/sheets-addon",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "docs/8_legacy/legacy-apps/sheets-addon",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant/sheets-addon",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@azizsys/whatsapp-client": {
        "name": "@azizsys/whatsapp-client",
        "type": "lib",
        "data": {
          "root": "packages/integrations/whatsapp-client",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/integrations/whatsapp-client",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/whatsapp-client",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/whatsapp-client",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "bigquery-client": {
        "name": "bigquery-client",
        "type": "lib",
        "data": {
          "root": "packages/integrations/bigquery-client",
          "targets": {
            "test": {
              "options": {
                "cwd": "packages/integrations/bigquery-client",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\packages\\integrations\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\packages\\integrations\\coverage\\bigquery-client"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/integrations/bigquery-client",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/integrations/bigquery-client/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/bigquery-client",
                "main": "bigquery-client/src/index.ts",
                "tsConfig": "bigquery-client/tsconfig.lib.json",
                "assets": [
                  "bigquery-client/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "bigquery-client",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/bigquery-client",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "bigquery-client/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@azizsys/content-management": {
        "name": "@azizsys/content-management",
        "type": "lib",
        "data": {
          "root": "packages/features/content-management",
          "targets": {
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                },
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/content-management",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "lint"
              ]
            },
            "description": "Advanced content management and knowledge base system",
            "js": {
              "packageName": "@azizsys/content-management",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "whatsapp-core": {
        "name": "whatsapp-core",
        "type": "lib",
        "data": {
          "root": "packages/integrations/whatsapp-core",
          "targets": {
            "test": {
              "options": {
                "cwd": "packages/integrations/whatsapp-core",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\packages\\integrations\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\packages\\integrations\\coverage\\whatsapp-core"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/integrations/whatsapp-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/integrations/whatsapp-core/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/whatsapp-core",
                "main": "whatsapp-core/src/index.ts",
                "tsConfig": "whatsapp-core/tsconfig.lib.json",
                "assets": [
                  "whatsapp-core/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "whatsapp-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/whatsapp-core",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "whatsapp-core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "undefined": {
        "name": "undefined",
        "type": "app",
        "data": {
          "root": "packages/dataconnect-sdk/react/esm",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/dataconnect-sdk/react/esm",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@azizsys/gtm-engine": {
        "name": "@azizsys/gtm-engine",
        "type": "lib",
        "data": {
          "root": "packages/integrations/gtm-engine",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/integrations/gtm-engine",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/gtm-engine",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev"
              ]
            },
            "description": "Google Tag Manager Engine for AzizSys",
            "js": {
              "packageName": "@azizsys/gtm-engine",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@g-assistant/auto-fix-system": {
        "name": "@g-assistant/auto-fix-system",
        "type": "lib",
        "data": {
          "root": "packages/tooling/auto-fix-system",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/tooling/auto-fix-system",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "ts-node index.ts",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "cycle": {
              "executor": "nx:run-script",
              "options": {
                "script": "cycle"
              },
              "metadata": {
                "scriptContent": "ts-node index.ts --cycle",
                "runCommand": "pnpm run cycle"
              },
              "configurations": {},
              "parallelism": true
            },
            "health": {
              "executor": "nx:run-script",
              "options": {
                "script": "health"
              },
              "metadata": {
                "scriptContent": "ts-node index.ts --health",
                "runCommand": "pnpm run health"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node --watch index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant/auto-fix-system",
          "tags": [
            "npm:public",
            "npm:auto-fix",
            "npm:typescript",
            "npm:nx",
            "npm:g-assistant"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start",
                "cycle",
                "health",
                "build",
                "dev"
              ]
            },
            "description": "Enhanced Auto-Fix System for G-Assistant NX",
            "js": {
              "packageName": "@g-assistant/auto-fix-system",
              "packageMain": "index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/features/live-sessions": {
        "name": "@azizsys/features/live-sessions",
        "type": "lib",
        "data": {
          "root": "packages/features/live-sessions",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/features/live-sessions",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/features/live-sessions",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/features/live-sessions",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/analytics-core": {
        "name": "@azizsys/analytics-core",
        "type": "lib",
        "data": {
          "root": "packages/domain/analytics-core",
          "targets": {
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                },
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/domain/analytics-core",
                "main": "packages/domain/analytics-core/src/index.ts",
                "tsConfig": "packages/domain/analytics-core/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "@azizsys/analytics-core",
          "tags": [
            "npm:public",
            "scope:analytics",
            "type:lib"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "test",
                "lint"
              ]
            },
            "description": "Advanced analytics and business intelligence core package",
            "js": {
              "packageName": "@azizsys/analytics-core",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/domain/analytics-core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@azizsys/dataconnect-sdk-react": {
        "name": "@azizsys/dataconnect-sdk-react",
        "type": "lib",
        "data": {
          "root": "packages/dataconnect-sdk/react",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/dataconnect-sdk/react",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/dataconnect-sdk-react",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "business-logic": {
        "name": "business-logic",
        "type": "lib",
        "data": {
          "root": "packages/domain/business-logic",
          "targets": {
            "test": {
              "options": {
                "cwd": "packages/domain/business-logic",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\packages\\domain\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\packages\\domain\\coverage\\business-logic"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/domain/business-logic",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/domain/business-logic/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/business-logic",
                "main": "business-logic/src/index.ts",
                "tsConfig": "business-logic/tsconfig.lib.json",
                "assets": [
                  "business-logic/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "business-logic",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/business-logic",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "business-logic/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@azizsys/json-rpc-client": {
        "name": "@azizsys/json-rpc-client",
        "type": "lib",
        "data": {
          "root": "packages/core/json-rpc-client",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/json-rpc-client",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/json-rpc-client",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/json-rpc-client",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/shared-hooks": {
        "name": "@azizsys/shared-hooks",
        "type": "lib",
        "data": {
          "root": "packages/tooling/shared-hooks",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/tooling/shared-hooks",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/shared-hooks",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/shared-hooks",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/shared-mocks": {
        "name": "@azizsys/shared-mocks",
        "type": "lib",
        "data": {
          "root": "packages/tooling/shared-mocks",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/tooling/shared-mocks",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/shared-mocks",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/shared-mocks",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/testing-core": {
        "name": "@azizsys/testing-core",
        "type": "lib",
        "data": {
          "root": "packages/tooling/testing-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/tooling/testing-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "coverage"
              },
              "metadata": {
                "scriptContent": "jest --coverage",
                "runCommand": "pnpm run coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/testing-core",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "coverage"
              ]
            },
            "description": "Advanced testing framework with coverage analysis and reporting",
            "js": {
              "packageName": "@azizsys/testing-core",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/domain/billing-core": {
        "name": "@azizsys/domain/billing-core",
        "type": "lib",
        "data": {
          "root": "packages/domain/billing-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/domain/billing-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/domain/billing-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/domain/billing-core",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "auto-repair": {
        "name": "auto-repair",
        "type": "app",
        "data": {
          "root": "packages/tooling/auto-repair",
          "targets": {
            "lint": {
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "auto-repair/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:run"
              },
              "metadata": {
                "scriptContent": "npx ts-node src/orchestrator.ts",
                "runCommand": "pnpm run repair:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:scan": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:scan"
              },
              "metadata": {
                "scriptContent": "ts-node src/scanner.ts",
                "runCommand": "pnpm run repair:scan"
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:detect": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:detect"
              },
              "metadata": {
                "scriptContent": "ts-node src/detector.ts",
                "runCommand": "pnpm run repair:detect"
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:fix": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:fix"
              },
              "metadata": {
                "scriptContent": "ts-node src/fixer.ts",
                "runCommand": "pnpm run repair:fix"
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:test": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:test"
              },
              "metadata": {
                "scriptContent": "ts-node src/tester.ts",
                "runCommand": "pnpm run repair:test"
              },
              "configurations": {},
              "parallelism": true
            },
            "repair:report": {
              "executor": "nx:run-script",
              "options": {
                "script": "repair:report"
              },
              "metadata": {
                "scriptContent": "ts-node src/reporter.ts",
                "runCommand": "pnpm run repair:report"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/auto-repair",
                "main": "auto-repair/src/orchestrator.ts",
                "tsConfig": "auto-repair/tsconfig.app.json",
                "assets": [
                  "auto-repair/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "options": {
                "buildTarget": "auto-repair:build"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "auto-repair",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "repair:run",
                "repair:scan",
                "repair:detect",
                "repair:fix",
                "repair:test",
                "repair:report"
              ]
            },
            "description": "AutoRepairSuite - نظام الإصلاح التلقائي الذكي",
            "js": {
              "packageName": "@g-assistant/auto-repair",
              "packageMain": "src/orchestrator.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "auto-repair/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@azizsys/domain/config-core": {
        "name": "@azizsys/domain/config-core",
        "type": "lib",
        "data": {
          "root": "packages/domain/config-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/domain/config-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/domain/config-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/domain/config-core",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/error-handler": {
        "name": "@azizsys/error-handler",
        "type": "lib",
        "data": {
          "root": "packages/core/error-handler",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/error-handler",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/error-handler",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/error-handler",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/g-assistant-agents": {
        "name": "@azizsys/g-assistant-agents",
        "type": "lib",
        "data": {
          "root": "packages/g-assistant-agents",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/g-assistant-agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/g-assistant-agents",
          "tags": [
            "npm:public",
            "npm:g-assistant",
            "npm:smart-agents",
            "npm:firebase",
            "npm:google-sheets"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test"
              ]
            },
            "description": "Smart Agents for G-Assistant with Firebase Data Connect",
            "js": {
              "packageName": "@azizsys/g-assistant-agents",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "azizsys-docs": {
        "name": "azizsys-docs",
        "type": "lib",
        "data": {
          "root": "docs/5_misc/archive/old_doc",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "docs/5_misc/archive/old_doc",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "azizsys-docs",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@azizsys/cache-client": {
        "name": "@azizsys/cache-client",
        "type": "lib",
        "data": {
          "root": "packages/core/cache-client",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/cache-client",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/cache-client",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/cache-client",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/data-connect-core": {
        "name": "@azizsys/data-connect-core",
        "type": "lib",
        "data": {
          "root": "packages/data-connect-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/data-connect-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "generate": {
              "executor": "nx:run-script",
              "options": {
                "script": "generate"
              },
              "metadata": {
                "scriptContent": "firebase dataconnect:sdk:generate --output-dir ./generated",
                "runCommand": "pnpm run generate"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/data-connect-core",
          "tags": [
            "npm:public",
            "npm:firebase",
            "npm:data-connect",
            "npm:graphql",
            "npm:azizsys",
            "npm:crm"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "generate",
                "test"
              ]
            },
            "description": "Firebase Data Connect integration for AzizSys AI Assistant",
            "js": {
              "packageName": "@azizsys/data-connect-core",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/shared-types": {
        "name": "@azizsys/shared-types",
        "type": "lib",
        "data": {
          "root": "packages/core/shared-types",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/shared-types",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/shared-types",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/shared-types",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/sidebar-agents": {
        "name": "@azizsys/sidebar-agents",
        "type": "lib",
        "data": {
          "root": "packages/ui/sidebar-agents",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/ui/sidebar-agents",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/sidebar-agents",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "السايد بار الثوري مع 5 وكلاء ذكيين",
            "js": {
              "packageName": "@azizsys/sidebar-agents",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@g-assistant-nx/ai-engine": {
        "name": "@g-assistant-nx/ai-engine",
        "type": "lib",
        "data": {
          "root": "packages/domain/ai-engine",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/domain/ai-engine",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant-nx/ai-engine",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/ai-engine",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@g-assistant/compliance-agent": {
        "name": "@g-assistant/compliance-agent",
        "type": "lib",
        "data": {
          "root": "packages/compliance-agent",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/compliance-agent",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/compliance-agent",
                "main": "packages/compliance-agent/src/index.ts",
                "tsConfig": "packages/compliance-agent/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "@g-assistant/compliance-agent",
          "tags": [
            "npm:public",
            "scope:compliance",
            "type:lib"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "test"
              ]
            },
            "description": "Al-Raqib Compliance Agent for automated quality monitoring",
            "js": {
              "packageName": "@g-assistant/compliance-agent",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/compliance-agent/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-components": {
        "name": "ui-components",
        "type": "lib",
        "data": {
          "root": "packages/ui/ui-components",
          "targets": {
            "test": {
              "options": {
                "cwd": "packages/ui/ui-components",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\packages\\ui\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\packages\\ui\\coverage\\ui-components"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/ui/ui-components",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "ui-components",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/ui-components",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "ui-components/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@azizsys/api-client": {
        "name": "@azizsys/api-client",
        "type": "lib",
        "data": {
          "root": "packages/core/api-client",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/api-client",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/api-client",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test"
              ]
            },
            "description": "Shared API client for AzizSys applications",
            "js": {
              "packageName": "@azizsys/api-client",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/deployment-core": {
        "name": "@azizsys/deployment-core",
        "type": "lib",
        "data": {
          "root": "packages/deployment-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/deployment-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/deployment-core",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test"
              ]
            },
            "description": "Advanced deployment and environment management system",
            "js": {
              "packageName": "@azizsys/deployment-core",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/monitoring-core": {
        "name": "@azizsys/monitoring-core",
        "type": "lib",
        "data": {
          "root": "packages/monitoring-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/monitoring-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/monitoring-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/monitoring-core",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "core-logic": {
        "name": "core-logic",
        "type": "lib",
        "data": {
          "root": "packages/core/core-logic",
          "targets": {
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "technologies": [
                  "jest",
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                },
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/core-logic",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/core/core-logic/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "jest --watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "jest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ci"
              },
              "metadata": {
                "scriptContent": "jest --ci --coverage --watchAll=false",
                "runCommand": "pnpm run test:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/core-logic",
                "main": "packages/core-logic/src/index.ts",
                "tsConfig": "packages/core-logic/tsconfig.lib.json",
                "assets": [
                  "packages/core-logic/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "core-logic",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test",
                "test:watch",
                "test:coverage",
                "test:ci"
              ]
            },
            "js": {
              "packageName": "@g-assistant-nx/core-logic",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/core-logic/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "dataconnect-sdk": {
        "name": "dataconnect-sdk",
        "type": "lib",
        "data": {
          "root": "packages/dataconnect-sdk",
          "targets": {
            "lint": {
              "executor": "nx:noop",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "dataconnect-sdk",
          "tags": [
            "npm:public",
            "type:library",
            "scope:dataconnect"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Firebase Data Connect SDK for AzizSys",
            "js": {
              "packageName": "@azizsys/dataconnect-sdk",
              "packageMain": "index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "projectType": "library",
          "sourceRoot": "packages/dataconnect-sdk/src",
          "implicitDependencies": []
        }
      },
      "@azizsys/core/event-bus": {
        "name": "@azizsys/core/event-bus",
        "type": "lib",
        "data": {
          "root": "packages/core/event-bus",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core/event-bus",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/core/event-bus",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/core/event-bus",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "whatsapp-query-bot": {
        "name": "whatsapp-query-bot",
        "type": "app",
        "data": {
          "root": "apps/whatsapp-query-bot",
          "targets": {
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\apps\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\apps\\coverage\\whatsapp-query-bot"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/whatsapp-query-bot",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/whatsapp-query-bot",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "whatsapp-query-bot:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "whatsapp-query-bot:build:development"
                },
                "production": {
                  "buildTarget": "whatsapp-query-bot:build:production"
                }
              },
              "parallelism": true
            }
          },
          "name": "whatsapp-query-bot",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "whatsapp-query-bot/src",
          "projectType": "application",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "@g-assistant-nx/security-core": {
        "name": "@g-assistant-nx/security-core",
        "type": "lib",
        "data": {
          "root": "packages/security-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/security-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant-nx/security-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@g-assistant-nx/security-core",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "web-chatbot-nexus": {
        "name": "web-chatbot-nexus",
        "type": "app",
        "data": {
          "root": "apps/web-chatbot/nexus",
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "preview",
                "serve"
              ]
            },
            "description": "Advanced AI Chat Interface with Gemini Integration - AzizSys AI Assistant",
            "js": {
              "packageName": "nexus-chat-pro",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                },
                "scriptContent": "vite build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-script",
              "options": {
                "script": "serve"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22.",
                "scriptContent": "vite preview --port 5173",
                "runCommand": "pnpm run serve"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite --port 5173",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "apps/web-chatbot/nexus",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web-chatbot-nexus --includeDependentProjects -- pnpm exec nx build-deps web-chatbot-nexus"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web-chatbot/nexus",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web-chatbot-nexus",
          "tags": [
            "npm:private",
            "npm:ai",
            "npm:chat",
            "npm:gemini",
            "npm:typescript",
            "npm:cyberpunk",
            "npm:matrix",
            "npm:arabic"
          ],
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web-chatbot/nexus/src",
          "implicitDependencies": []
        }
      },
      "whatsapp-exec-bot": {
        "name": "whatsapp-exec-bot",
        "type": "app",
        "data": {
          "root": "apps/whatsapp-exec-bot",
          "targets": {
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\apps\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\apps\\coverage\\whatsapp-exec-bot"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/whatsapp-exec-bot",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/whatsapp-exec-bot",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "whatsapp-exec-bot:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "whatsapp-exec-bot:build:development"
                },
                "production": {
                  "buildTarget": "whatsapp-exec-bot:build:production"
                }
              },
              "parallelism": true
            }
          },
          "name": "whatsapp-exec-bot",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "whatsapp-exec-bot/src",
          "projectType": "application",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "admin-dashboard": {
        "name": "admin-dashboard",
        "type": "app",
        "data": {
          "root": "apps/admin-dashboard",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start"
              ]
            },
            "js": {
              "packageName": "admin-dashboard",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/admin-dashboard/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "apps/admin-dashboard",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects admin-dashboard --includeDependentProjects -- pnpm exec nx build-deps admin-dashboard"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/admin-dashboard",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/admin-dashboard"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "admin-dashboard:build",
                "port": 4200
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            }
          },
          "name": "admin-dashboard",
          "tags": [
            "npm:private",
            "scope:admin",
            "type:app"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/admin-dashboard/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@azizsys/crm-domain": {
        "name": "@azizsys/crm-domain",
        "type": "lib",
        "data": {
          "root": "packages/domain/crm",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/domain/crm",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/crm-domain",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/crm-domain",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/crm-ui": {
        "name": "@azizsys/crm-ui",
        "type": "lib",
        "data": {
          "root": "packages/ui/crm-ui",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/ui/crm-ui",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/crm-ui",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/crm-ui",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@azizsys/crm-core": {
        "name": "@azizsys/crm-core",
        "type": "lib",
        "data": {
          "root": "packages/crm-core",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/crm-core",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@azizsys/crm-core",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@azizsys/crm-core",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "sheets-sidebar": {
        "name": "sheets-sidebar",
        "type": "app",
        "data": {
          "root": "apps/sheets-addon",
          "projectType": "application",
          "metadata": {},
          "targets": {
            "build": {
              "options": {
                "cwd": "apps/sheets-addon",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "vite"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\dist"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite build",
                "help": {
                  "command": "pnpm exec vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "sheets-sidebar:build",
                "runBuildTargetDependencies": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "sheets-sidebar:build:development"
                },
                "production": {
                  "buildTarget": "sheets-sidebar:build:production"
                }
              },
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/sheets-addon",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "apps/sheets-addon",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "apps/sheets-addon",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects sheets-sidebar --includeDependentProjects -- pnpm exec nx build-deps sheets-sidebar"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\apps\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\apps\\coverage\\sheets-sidebar"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/sheets-addon",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/sheets-addon",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "sheets-sidebar",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "sheets-sidebar/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "web-chatbot": {
        "name": "web-chatbot",
        "type": "app",
        "data": {
          "root": "apps/web-chatbot",
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "description": "Advanced AI Chat Interface with Gemini Integration - AzizSys AI Assistant",
            "js": {
              "packageName": "web-chatbot",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/web-chatbot",
                "main": "apps/web-chatbot/src/main.tsx",
                "tsConfig": "apps/web-chatbot/tsconfig.app.json"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "options": {
                "buildTarget": "web-chatbot:build",
                "port": 3000
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite --port 5173",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "apps/web-chatbot",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web-chatbot --includeDependentProjects -- pnpm exec nx build-deps web-chatbot"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/web-chatbot",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\apps\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\apps\\coverage\\client-web-interface"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/web-chatbot",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "web-chatbot",
          "tags": [
            "npm:private",
            "npm:ai",
            "npm:chat",
            "npm:gemini",
            "npm:typescript",
            "npm:cyberpunk",
            "npm:matrix",
            "npm:arabic"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web-chatbot/src",
          "implicitDependencies": []
        }
      },
      "@g-assistant/sdk-js": {
        "name": "@g-assistant/sdk-js",
        "type": "lib",
        "data": {
          "root": "packages/sdk-js",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/sdk-js",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@g-assistant/sdk-js",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build"
              ]
            },
            "description": "JavaScript SDK for G-Assistant API",
            "js": {
              "packageName": "@g-assistant/sdk-js",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "crm-system": {
        "name": "crm-system",
        "type": "app",
        "data": {
          "root": "apps/crm-system",
          "projectType": "application",
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "crm-system",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/crm-system"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                }
              },
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "crm-system:build",
                "port": 4200
              },
              "configurations": {
                "development": {
                  "buildTarget": "crm-system:build:development",
                  "hmr": true
                },
                "production": {
                  "buildTarget": "crm-system:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/crm-system",
                "command": "vite"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "pnpm exec vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "options": {
                "cwd": "apps/crm-system",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "pnpm exec vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": "apps/crm-system",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects crm-system --includeDependentProjects -- pnpm exec nx build-deps crm-system"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/crm-system",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "crm-system",
          "tags": [
            "npm:private",
            "type:app",
            "scope:crm"
          ],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/crm-system/src",
          "implicitDependencies": []
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api",
                "env": {
                  "ESLINT_USE_FLAT_CONFIG": "true"
                },
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/main.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node src/main.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "jest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true
            },
            "db:init": {
              "executor": "nx:run-script",
              "options": {
                "script": "db:init"
              },
              "metadata": {
                "scriptContent": "psql -U postgres -f src/database/init.sql",
                "runCommand": "pnpm run db:init"
              },
              "configurations": {},
              "parallelism": true
            },
            "db:migrate": {
              "executor": "nx:run-script",
              "options": {
                "script": "db:migrate"
              },
              "metadata": {
                "scriptContent": "node scripts/migrate.js",
                "runCommand": "pnpm run db:migrate"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/api",
                "main": "apps/api/src/main.ts",
                "tsConfig": "apps/api/tsconfig.app.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "options": {
                "buildTarget": "api:build"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "api",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start",
                "dev",
                "test",
                "db:init",
                "db:migrate"
              ]
            },
            "js": {
              "packageName": "@azizsys/api",
              "packageMain": "src/main.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "g-assistant-nx": {
        "name": "g-assistant-nx",
        "type": "app",
        "data": {
          "root": ".",
          "metadata": {},
          "targets": {
            "test": {
              "options": {
                "cwd": ".",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "pnpm exec vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "options": {
                "cwd": ".",
                "command": "tsc --noEmit -p tsconfig.json"
              },
              "metadata": {
                "description": "Runs type-checking for the project.",
                "technologies": [
                  "typescript"
                ],
                "help": {
                  "command": "pnpm exec tsc -p tsconfig.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects g-assistant-nx --includeDependentProjects -- pnpm exec nx build-deps g-assistant-nx"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "g-assistant-nx",
          "implicitDependencies": [],
          "tags": []
        }
      }
    },
    "dependencies": {
      "october-frontend": [],
      "gemini-research-frontend": [],
      "azizsys-frontend": [],
      "october-implementation": [],
      "gemini-research-agent": [],
      "@g-assistant/web-interface": [],
      "@azizsys/odoo-integration": [],
      "@g-assistant/sheets-addon": [],
      "@azizsys/whatsapp-client": [
        {
          "source": "@azizsys/whatsapp-client",
          "target": "@azizsys/shared-types",
          "type": "static"
        }
      ],
      "bigquery-client": [],
      "@azizsys/content-management": [],
      "whatsapp-core": [],
      "undefined": [],
      "@azizsys/gtm-engine": [],
      "@g-assistant/auto-fix-system": [
        {
          "source": "@g-assistant/auto-fix-system",
          "target": "@g-assistant/compliance-agent",
          "type": "dynamic"
        }
      ],
      "@azizsys/features/live-sessions": [],
      "@azizsys/analytics-core": [],
      "@azizsys/dataconnect-sdk-react": [
        {
          "source": "@azizsys/dataconnect-sdk-react",
          "target": "dataconnect-sdk",
          "type": "static"
        }
      ],
      "business-logic": [],
      "@azizsys/json-rpc-client": [
        {
          "source": "@azizsys/json-rpc-client",
          "target": "@azizsys/shared-types",
          "type": "static"
        }
      ],
      "@azizsys/shared-hooks": [
        {
          "source": "@azizsys/shared-hooks",
          "target": "@azizsys/json-rpc-client",
          "type": "static"
        },
        {
          "source": "@azizsys/shared-hooks",
          "target": "@azizsys/cache-client",
          "type": "static"
        },
        {
          "source": "@azizsys/shared-hooks",
          "target": "undefined",
          "type": "static"
        }
      ],
      "@azizsys/shared-mocks": [
        {
          "source": "@azizsys/shared-mocks",
          "target": "@azizsys/shared-types",
          "type": "static"
        }
      ],
      "@azizsys/testing-core": [],
      "@azizsys/domain/billing-core": [],
      "auto-repair": [],
      "@azizsys/domain/config-core": [],
      "@azizsys/error-handler": [
        {
          "source": "@azizsys/error-handler",
          "target": "@azizsys/shared-types",
          "type": "static"
        }
      ],
      "@azizsys/g-assistant-agents": [
        {
          "source": "@azizsys/g-assistant-agents",
          "target": "@azizsys/data-connect-core",
          "type": "static"
        }
      ],
      "azizsys-docs": [],
      "@azizsys/cache-client": [
        {
          "source": "@azizsys/cache-client",
          "target": "@azizsys/shared-types",
          "type": "static"
        }
      ],
      "@azizsys/data-connect-core": [
        {
          "source": "@azizsys/data-connect-core",
          "target": "core-logic",
          "type": "static"
        }
      ],
      "@azizsys/shared-types": [],
      "@azizsys/sidebar-agents": [],
      "@g-assistant-nx/ai-engine": [
        {
          "source": "@g-assistant-nx/ai-engine",
          "target": "@azizsys/domain/config-core",
          "type": "static"
        }
      ],
      "@g-assistant/compliance-agent": [],
      "ui-components": [],
      "@azizsys/api-client": [],
      "@azizsys/deployment-core": [],
      "@azizsys/monitoring-core": [],
      "core-logic": [],
      "dataconnect-sdk": [],
      "@azizsys/core/event-bus": [],
      "whatsapp-query-bot": [
        {
          "source": "whatsapp-query-bot",
          "target": "whatsapp-core",
          "type": "static"
        }
      ],
      "@g-assistant-nx/security-core": [],
      "web-chatbot-nexus": [],
      "whatsapp-exec-bot": [
        {
          "source": "whatsapp-exec-bot",
          "target": "whatsapp-core",
          "type": "static"
        },
        {
          "source": "whatsapp-exec-bot",
          "target": "admin-dashboard",
          "type": "static"
        },
        {
          "source": "whatsapp-exec-bot",
          "target": "admin-dashboard",
          "type": "dynamic"
        },
        {
          "source": "whatsapp-exec-bot",
          "target": "@azizsys/odoo-integration",
          "type": "static"
        }
      ],
      "admin-dashboard": [
        {
          "source": "admin-dashboard",
          "target": "@azizsys/g-assistant-agents",
          "type": "static"
        },
        {
          "source": "admin-dashboard",
          "target": "@azizsys/gtm-engine",
          "type": "static"
        }
      ],
      "@azizsys/crm-domain": [],
      "@azizsys/crm-ui": [],
      "@azizsys/crm-core": [],
      "sheets-sidebar": [],
      "web-chatbot": [
        {
          "source": "web-chatbot",
          "target": "@azizsys/sidebar-agents",
          "type": "static"
        }
      ],
      "@g-assistant/sdk-js": [],
      "crm-system": [
        {
          "source": "crm-system",
          "target": "@azizsys/crm-core",
          "type": "static"
        }
      ],
      "api": [
        {
          "source": "api",
          "target": "@azizsys/core/event-bus",
          "type": "static"
        },
        {
          "source": "api",
          "target": "@g-assistant/compliance-agent",
          "type": "static"
        }
      ],
      "g-assistant-nx": [
        {
          "source": "g-assistant-nx",
          "target": "api",
          "type": "static"
        },
        {
          "source": "g-assistant-nx",
          "target": "@azizsys/analytics-core",
          "type": "static"
        },
        {
          "source": "g-assistant-nx",
          "target": "@g-assistant-nx/security-core",
          "type": "static"
        },
        {
          "source": "g-assistant-nx",
          "target": "@azizsys/shared-mocks",
          "type": "static"
        }
      ]
    }
  }
}