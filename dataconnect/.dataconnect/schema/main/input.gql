"""
✨ `ChatSession_KeyOutput` returns the primary key fields of table type `ChatSession`.

It has the same format as `ChatSession_Key`, but is only used as mutation return value.
"""
scalar ChatSession_KeyOutput
"""
✨ `KnowledgeEntry_KeyOutput` returns the primary key fields of table type `KnowledgeEntry`.

It has the same format as `KnowledgeEntry_Key`, but is only used as mutation return value.
"""
scalar KnowledgeEntry_KeyOutput
"""
✨ `Message_KeyOutput` returns the primary key fields of table type `Message`.

It has the same format as `Message_Key`, but is only used as mutation return value.
"""
scalar Message_KeyOutput
"""
✨ `Task_KeyOutput` returns the primary key fields of table type `Task`.

It has the same format as `Task_Key`, but is only used as mutation return value.
"""
scalar Task_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'ChatSession'. It includes all necessary fields for creating or upserting rows into table.
"""
input ChatSession_Data {
  """
  ✨ Generated from Field `ChatSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ChatSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ChatSession`.`userId` of type `String!`
  """
  userId: String
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `ChatSession`.`userId` of type `String!`)
  """
  userId_expr: String_Expr
  """
  ✨ Generated from Field `ChatSession`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `ChatSession`.`agentType` of type `String!`
  """
  agentType: String
  """
  ✨ `_expr` server value variant of `agentType` (✨ Generated from Field `ChatSession`.`agentType` of type `String!`)
  """
  agentType_expr: String_Expr
  """
  ✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `ChatSession`.`isActive` of type `Boolean!`
  """
  isActive: Boolean
  """
  ✨ `_expr` server value variant of `isActive` (✨ Generated from Field `ChatSession`.`isActive` of type `Boolean!`)
  """
  isActive_expr: Boolean_Expr
  """
  ✨ Generated from Field `ChatSession`.`title` of type `String`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `ChatSession`.`title` of type `String`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'ChatSession'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ChatSession_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ChatSession_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ChatSession_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ChatSession_Filter!]
  """
  ✨ Generated from Field `ChatSession`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ChatSession`.`userId` of type `String!`
  """
  userId: String_Filter
  """
  ✨ Generated from Field `ChatSession`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `ChatSession`.`agentType` of type `String!`
  """
  agentType: String_Filter
  """
  ✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `ChatSession`.`isActive` of type `Boolean!`
  """
  isActive: Boolean_Filter
  """
  ✨ Generated from Field `ChatSession`.`title` of type `String`
  """
  title: String_Filter
  """
  ✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `ChatSession`.`messages_on_session` of type `[Message!]!`
  """
  messages_on_session: Message_ListFilter
}
"""
✨ Generated first-row input type for table 'ChatSession'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ChatSession_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ChatSession_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ChatSession_Filter
}
"""
✨ Generated having input type for table 'ChatSession'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ChatSession_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ChatSession_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ChatSession_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ChatSession_Having!]
  """
  ✨ Generated from Field `ChatSession`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`agentType_count` of type `Int!`
  """
  agentType_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`isActive_count` of type `Int!`
  """
  isActive_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `ChatSession`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ChatSession`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'ChatSession'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ChatSession_Key {
  """
  ✨ Generated from Field `ChatSession`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ChatSession`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ChatSession'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ChatSession_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ChatSession_Filter
}
"""
✨ Generated order input type for table 'ChatSession'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ChatSession_Order {
  """
  ✨ Generated from Field `ChatSession`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`userId` of type `String!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `ChatSession`.`agentType` of type `String!`
  """
  agentType: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`isActive` of type `Boolean!`
  """
  isActive: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`title` of type `String`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`updatedAt` of type `Timestamp`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`agentType_count` of type `Int!`
  """
  agentType_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`isActive_count` of type `Int!`
  """
  isActive_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `ChatSession`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'KnowledgeEntry'. It includes all necessary fields for creating or upserting rows into table.
"""
input KnowledgeEntry_Data {
  """
  ✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`category` of type `String!`
  """
  category: String
  """
  ✨ `_expr` server value variant of `category` (✨ Generated from Field `KnowledgeEntry`.`category` of type `String!`)
  """
  category_expr: String_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`content` of type `String!`
  """
  content: String
  """
  ✨ `_expr` server value variant of `content` (✨ Generated from Field `KnowledgeEntry`.`content` of type `String!`)
  """
  content_expr: String_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `KnowledgeEntry`.`source` of type `String`
  """
  source: String
  """
  ✨ `_expr` server value variant of `source` (✨ Generated from Field `KnowledgeEntry`.`source` of type `String`)
  """
  source_expr: String_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`tags` of type `String`
  """
  tags: String
  """
  ✨ `_expr` server value variant of `tags` (✨ Generated from Field `KnowledgeEntry`.`tags` of type `String`)
  """
  tags_expr: String_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `KnowledgeEntry`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'KnowledgeEntry'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input KnowledgeEntry_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [KnowledgeEntry_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: KnowledgeEntry_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [KnowledgeEntry_Filter!]
  """
  ✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`category` of type `String!`
  """
  category: String_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`content` of type `String!`
  """
  content: String_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`source` of type `String`
  """
  source: String_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`tags` of type `String`
  """
  tags: String_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'KnowledgeEntry'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input KnowledgeEntry_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [KnowledgeEntry_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: KnowledgeEntry_Filter
}
"""
✨ Generated having input type for table 'KnowledgeEntry'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input KnowledgeEntry_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [KnowledgeEntry_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: KnowledgeEntry_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [KnowledgeEntry_Having!]
  """
  ✨ Generated from Field `KnowledgeEntry`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`category_count` of type `Int!`
  """
  category_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`content_count` of type `Int!`
  """
  content_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`source_count` of type `Int!`
  """
  source_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`tags_count` of type `Int!`
  """
  tags_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'KnowledgeEntry'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input KnowledgeEntry_Key {
  """
  ✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'KnowledgeEntry'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input KnowledgeEntry_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: KnowledgeEntry_Filter
}
"""
✨ Generated order input type for table 'KnowledgeEntry'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input KnowledgeEntry_Order {
  """
  ✨ Generated from Field `KnowledgeEntry`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`category` of type `String!`
  """
  category: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`content` of type `String!`
  """
  content: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`source` of type `String`
  """
  source: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`tags` of type `String`
  """
  tags: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt` of type `Timestamp`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`category_count` of type `Int!`
  """
  category_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`content_count` of type `Int!`
  """
  content_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`source_count` of type `Int!`
  """
  source_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`tags_count` of type `Int!`
  """
  tags_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `KnowledgeEntry`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Message'. It includes all necessary fields for creating or upserting rows into table.
"""
input Message_Data {
  """
  ✨ Generated from Field `Message`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Message`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Message`.`sessionId` of type `UUID!`
  """
  sessionId: UUID
  """
  ✨ `_expr` server value variant of `sessionId` (✨ Generated from Field `Message`.`sessionId` of type `UUID!`)
  """
  sessionId_expr: UUID_Expr
  """
  ✨ Generated from Field `Message`.`session` of type `ChatSession!`
  """
  session: ChatSession_Key
  """
  ✨ Generated from Field `Message`.`content` of type `String!`
  """
  content: String
  """
  ✨ `_expr` server value variant of `content` (✨ Generated from Field `Message`.`content` of type `String!`)
  """
  content_expr: String_Expr
  """
  ✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Message`.`metadata` of type `String`
  """
  metadata: String
  """
  ✨ `_expr` server value variant of `metadata` (✨ Generated from Field `Message`.`metadata` of type `String`)
  """
  metadata_expr: String_Expr
  """
  ✨ Generated from Field `Message`.`role` of type `String!`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `Message`.`role` of type `String!`)
  """
  role_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Message'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Message_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Message_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Message_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Message_Filter!]
  """
  ✨ Generated from Field `Message`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Message`.`sessionId` of type `UUID!`
  """
  sessionId: UUID_Filter
  """
  ✨ Generated from Field `Message`.`session` of type `ChatSession!`
  """
  session: ChatSession_Filter
  """
  ✨ Generated from Field `Message`.`content` of type `String!`
  """
  content: String_Filter
  """
  ✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Message`.`metadata` of type `String`
  """
  metadata: String_Filter
  """
  ✨ Generated from Field `Message`.`role` of type `String!`
  """
  role: String_Filter
}
"""
✨ Generated first-row input type for table 'Message'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Message_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Message_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Message_Filter
}
"""
✨ Generated having input type for table 'Message'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Message_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Message_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Message_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Message_Having!]
  """
  ✨ Generated from Field `Message`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Message`.`content_count` of type `Int!`
  """
  content_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`metadata_count` of type `Int!`
  """
  metadata_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`role_count` of type `Int!`
  """
  role_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`sessionId_count` of type `Int!`
  """
  sessionId_count: Int_Filter
  """
  ✨ Generated from Field `Message`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Message`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Message'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Message_Key {
  """
  ✨ Generated from Field `Message`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Message`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Message'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Message_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Message_Filter
}
"""
✨ Generated order input type for table 'Message'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Message_Order {
  """
  ✨ Generated from Field `Message`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Message`.`sessionId` of type `UUID!`
  """
  sessionId: OrderDirection
  """
  ✨ Generated from Field `Message`.`session` of type `ChatSession!`
  """
  session: ChatSession_Order
  """
  ✨ Generated from Field `Message`.`content` of type `String!`
  """
  content: OrderDirection
  """
  ✨ Generated from Field `Message`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Message`.`metadata` of type `String`
  """
  metadata: OrderDirection
  """
  ✨ Generated from Field `Message`.`role` of type `String!`
  """
  role: OrderDirection
  """
  ✨ Generated from Field `Message`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Message`.`content_count` of type `Int!`
  """
  content_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`metadata_count` of type `Int!`
  """
  metadata_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`role_count` of type `Int!`
  """
  role_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`sessionId_count` of type `Int!`
  """
  sessionId_count: OrderDirection
  """
  ✨ Generated from Field `Message`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Message`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Task'. It includes all necessary fields for creating or upserting rows into table.
"""
input Task_Data {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`createdById` of type `String`
  """
  createdById: String
  """
  ✨ `_expr` server value variant of `createdById` (✨ Generated from Field `Task`.`createdById` of type `String`)
  """
  createdById_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`createdBy` of type `User`
  """
  createdBy: User_Key
  """
  ✨ Generated from Field `Task`.`assignedAgent` of type `String`
  """
  assignedAgent: String
  """
  ✨ `_expr` server value variant of `assignedAgent` (✨ Generated from Field `Task`.`assignedAgent` of type `String`)
  """
  assignedAgent_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: Timestamp
  """
  ✨ `_expr` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Task`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`priority` of type `String!`
  """
  priority: String
  """
  ✨ `_expr` server value variant of `priority` (✨ Generated from Field `Task`.`priority` of type `String!`)
  """
  priority_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Task`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Task`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Task'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Task_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Task_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Task_Filter!]
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Task`.`createdById` of type `String`
  """
  createdById: String_Filter
  """
  ✨ Generated from Field `Task`.`createdBy` of type `User`
  """
  createdBy: User_Filter
  """
  ✨ Generated from Field `Task`.`assignedAgent` of type `String`
  """
  assignedAgent: String_Filter
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Task`.`priority` of type `String!`
  """
  priority: String_Filter
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Task'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Task_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Task_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Task_Filter
}
"""
✨ Generated having input type for table 'Task'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Task_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Task_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Task_Having!]
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Task`.`assignedAgent_count` of type `Int!`
  """
  assignedAgent_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_count` of type `Int!`
  """
  completedAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`createdById_count` of type `Int!`
  """
  createdById_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`priority_count` of type `Int!`
  """
  priority_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_min` of type `Timestamp`
  """
  completedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_max` of type `Timestamp`
  """
  completedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Task'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Task_Key {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Task'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Task_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Task_Filter
}
"""
✨ Generated order input type for table 'Task'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Task_Order {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdById` of type `String`
  """
  createdById: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdBy` of type `User`
  """
  createdBy: User_Order
  """
  ✨ Generated from Field `Task`.`assignedAgent` of type `String`
  """
  assignedAgent: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Task`.`priority` of type `String!`
  """
  priority: OrderDirection
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Task`.`assignedAgent_count` of type `Int!`
  """
  assignedAgent_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_count` of type `Int!`
  """
  completedAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdById_count` of type `Int!`
  """
  createdById_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`priority_count` of type `Int!`
  """
  priority_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_min` of type `Timestamp`
  """
  completedAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_max` of type `Timestamp`
  """
  completedAt_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`
  """
  lastActiveAt: Timestamp
  """
  ✨ `_expr` server value variant of `lastActiveAt` (✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`)
  """
  lastActiveAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastActiveAt` (✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`)
  """
  lastActiveAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastActiveAt` (✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`)
  """
  lastActiveAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`
  """
  lastActiveAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`chatSessions_on_user` of type `[ChatSession!]!`
  """
  chatSessions_on_user: ChatSession_ListFilter
  """
  ✨ Generated from Field `User`.`tasks_on_createdBy` of type `[Task!]!`
  """
  tasks_on_createdBy: Task_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`lastActiveAt_count` of type `Int!`
  """
  lastActiveAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastActiveAt_min` of type `Timestamp`
  """
  lastActiveAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastActiveAt_max` of type `Timestamp`
  """
  lastActiveAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`lastActiveAt` of type `Timestamp`
  """
  lastActiveAt: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`lastActiveAt_count` of type `Int!`
  """
  lastActiveAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`lastActiveAt_min` of type `Timestamp`
  """
  lastActiveAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `User`.`lastActiveAt_max` of type `Timestamp`
  """
  lastActiveAt_max: OrderDirection
}
