"""
✨ `AIInteraction_KeyOutput` returns the primary key fields of table type `AIInteraction`.

It has the same format as `AIInteraction_Key`, but is only used as mutation return value.
"""
scalar AIInteraction_KeyOutput
"""
✨ `Request_KeyOutput` returns the primary key fields of table type `Request`.

It has the same format as `Request_Key`, but is only used as mutation return value.
"""
scalar Request_KeyOutput
"""
✨ `Service_KeyOutput` returns the primary key fields of table type `Service`.

It has the same format as `Service_Key`, but is only used as mutation return value.
"""
scalar Service_KeyOutput
"""
✨ `SubscriptionType_KeyOutput` returns the primary key fields of table type `SubscriptionType`.

It has the same format as `SubscriptionType_Key`, but is only used as mutation return value.
"""
scalar SubscriptionType_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ `UserSubscription_KeyOutput` returns the primary key fields of table type `UserSubscription`.

It has the same format as `UserSubscription_Key`, but is only used as mutation return value.
"""
scalar UserSubscription_KeyOutput
"""
✨ Generated data input type for table 'AIInteraction'. It includes all necessary fields for creating or upserting rows into table.
"""
input AIInteraction_Data {
  """
  ✨ Generated from Field `AIInteraction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIInteraction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `AIInteraction`.`serviceId` of type `UUID!`
  """
  serviceId: UUID
  """
  ✨ `_expr` server value variant of `serviceId` (✨ Generated from Field `AIInteraction`.`serviceId` of type `UUID!`)
  """
  serviceId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIInteraction`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `AIInteraction`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIInteraction`.`service` of type `Service!`
  """
  service: Service_Key
  """
  ✨ Generated from Field `AIInteraction`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `AIInteraction`.`aiResponse` of type `String`
  """
  aiResponse: String
  """
  ✨ `_expr` server value variant of `aiResponse` (✨ Generated from Field `AIInteraction`.`aiResponse` of type `String`)
  """
  aiResponse_expr: String_Expr
  """
  ✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `AIInteraction`.`interactionType` of type `String!`
  """
  interactionType: String
  """
  ✨ `_expr` server value variant of `interactionType` (✨ Generated from Field `AIInteraction`.`interactionType` of type `String!`)
  """
  interactionType_expr: String_Expr
  """
  ✨ Generated from Field `AIInteraction`.`message` of type `String!`
  """
  message: String
  """
  ✨ `_expr` server value variant of `message` (✨ Generated from Field `AIInteraction`.`message` of type `String!`)
  """
  message_expr: String_Expr
  """
  ✨ Generated from Field `AIInteraction`.`relatedRequestId` of type `UUID`
  """
  relatedRequestId: UUID
  """
  ✨ `_expr` server value variant of `relatedRequestId` (✨ Generated from Field `AIInteraction`.`relatedRequestId` of type `UUID`)
  """
  relatedRequestId_expr: UUID_Expr
}
"""
✨ Generated filter input type for table 'AIInteraction'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIInteraction_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AIInteraction_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AIInteraction_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AIInteraction_Filter!]
  """
  ✨ Generated from Field `AIInteraction`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `AIInteraction`.`serviceId` of type `UUID!`
  """
  serviceId: UUID_Filter
  """
  ✨ Generated from Field `AIInteraction`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `AIInteraction`.`service` of type `Service!`
  """
  service: Service_Filter
  """
  ✨ Generated from Field `AIInteraction`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `AIInteraction`.`aiResponse` of type `String`
  """
  aiResponse: String_Filter
  """
  ✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `AIInteraction`.`interactionType` of type `String!`
  """
  interactionType: String_Filter
  """
  ✨ Generated from Field `AIInteraction`.`message` of type `String!`
  """
  message: String_Filter
  """
  ✨ Generated from Field `AIInteraction`.`relatedRequestId` of type `UUID`
  """
  relatedRequestId: UUID_Filter
}
"""
✨ Generated first-row input type for table 'AIInteraction'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AIInteraction_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AIInteraction_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AIInteraction_Filter
}
"""
✨ Generated having input type for table 'AIInteraction'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIInteraction_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [AIInteraction_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: AIInteraction_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [AIInteraction_Having!]
  """
  ✨ Generated from Field `AIInteraction`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`aiResponse_count` of type `Int!`
  """
  aiResponse_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`interactionType_count` of type `Int!`
  """
  interactionType_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`message_count` of type `Int!`
  """
  message_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`relatedRequestId_count` of type `Int!`
  """
  relatedRequestId_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`serviceId_count` of type `Int!`
  """
  serviceId_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'AIInteraction'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AIInteraction_Key {
  """
  ✨ Generated from Field `AIInteraction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIInteraction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'AIInteraction'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AIInteraction_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AIInteraction_Filter
}
"""
✨ Generated order input type for table 'AIInteraction'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AIInteraction_Order {
  """
  ✨ Generated from Field `AIInteraction`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`serviceId` of type `UUID!`
  """
  serviceId: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`service` of type `Service!`
  """
  service: Service_Order
  """
  ✨ Generated from Field `AIInteraction`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `AIInteraction`.`aiResponse` of type `String`
  """
  aiResponse: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`interactionType` of type `String!`
  """
  interactionType: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`message` of type `String!`
  """
  message: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`relatedRequestId` of type `UUID`
  """
  relatedRequestId: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`aiResponse_count` of type `Int!`
  """
  aiResponse_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`interactionType_count` of type `Int!`
  """
  interactionType_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`message_count` of type `Int!`
  """
  message_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`relatedRequestId_count` of type `Int!`
  """
  relatedRequestId_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`serviceId_count` of type `Int!`
  """
  serviceId_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `AIInteraction`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Request'. It includes all necessary fields for creating or upserting rows into table.
"""
input Request_Data {
  """
  ✨ Generated from Field `Request`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Request`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Request`.`serviceId` of type `UUID!`
  """
  serviceId: UUID
  """
  ✨ `_expr` server value variant of `serviceId` (✨ Generated from Field `Request`.`serviceId` of type `UUID!`)
  """
  serviceId_expr: UUID_Expr
  """
  ✨ Generated from Field `Request`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Request`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Request`.`service` of type `Service!`
  """
  service: Service_Key
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Request`.`aiSuggestions` of type `String`
  """
  aiSuggestions: String
  """
  ✨ `_expr` server value variant of `aiSuggestions` (✨ Generated from Field `Request`.`aiSuggestions` of type `String`)
  """
  aiSuggestions_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Request`.`details` of type `String`
  """
  details: String
  """
  ✨ `_expr` server value variant of `details` (✨ Generated from Field `Request`.`details` of type `String`)
  """
  details_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`requestType` of type `String!`
  """
  requestType: String
  """
  ✨ `_expr` server value variant of `requestType` (✨ Generated from Field `Request`.`requestType` of type `String!`)
  """
  requestType_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`response` of type `String`
  """
  response: String
  """
  ✨ `_expr` server value variant of `response` (✨ Generated from Field `Request`.`response` of type `String`)
  """
  response_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Request`.`status` of type `String!`)
  """
  status_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Request'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Request_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Request_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Request_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Request_Filter!]
  """
  ✨ Generated from Field `Request`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Request`.`serviceId` of type `UUID!`
  """
  serviceId: UUID_Filter
  """
  ✨ Generated from Field `Request`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Request`.`service` of type `Service!`
  """
  service: Service_Filter
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Request`.`aiSuggestions` of type `String`
  """
  aiSuggestions: String_Filter
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Request`.`details` of type `String`
  """
  details: String_Filter
  """
  ✨ Generated from Field `Request`.`requestType` of type `String!`
  """
  requestType: String_Filter
  """
  ✨ Generated from Field `Request`.`response` of type `String`
  """
  response: String_Filter
  """
  ✨ Generated from Field `Request`.`status` of type `String!`
  """
  status: String_Filter
}
"""
✨ Generated first-row input type for table 'Request'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Request_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Request_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Request_Filter
}
"""
✨ Generated having input type for table 'Request'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Request_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Request_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Request_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Request_Having!]
  """
  ✨ Generated from Field `Request`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Request`.`aiSuggestions_count` of type `Int!`
  """
  aiSuggestions_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`details_count` of type `Int!`
  """
  details_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`requestType_count` of type `Int!`
  """
  requestType_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`response_count` of type `Int!`
  """
  response_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`serviceId_count` of type `Int!`
  """
  serviceId_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Request'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Request_Key {
  """
  ✨ Generated from Field `Request`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Request`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Request'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Request_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Request_Filter
}
"""
✨ Generated order input type for table 'Request'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Request_Order {
  """
  ✨ Generated from Field `Request`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Request`.`serviceId` of type `UUID!`
  """
  serviceId: OrderDirection
  """
  ✨ Generated from Field `Request`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Request`.`service` of type `Service!`
  """
  service: Service_Order
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Request`.`aiSuggestions` of type `String`
  """
  aiSuggestions: OrderDirection
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Request`.`details` of type `String`
  """
  details: OrderDirection
  """
  ✨ Generated from Field `Request`.`requestType` of type `String!`
  """
  requestType: OrderDirection
  """
  ✨ Generated from Field `Request`.`response` of type `String`
  """
  response: OrderDirection
  """
  ✨ Generated from Field `Request`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Request`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Request`.`aiSuggestions_count` of type `Int!`
  """
  aiSuggestions_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`details_count` of type `Int!`
  """
  details_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`requestType_count` of type `Int!`
  """
  requestType_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`response_count` of type `Int!`
  """
  response_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`serviceId_count` of type `Int!`
  """
  serviceId_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Request`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Request`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Service'. It includes all necessary fields for creating or upserting rows into table.
"""
input Service_Data {
  """
  ✨ Generated from Field `Service`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Service`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Service`.`department` of type `String!`
  """
  department: String
  """
  ✨ `_expr` server value variant of `department` (✨ Generated from Field `Service`.`department` of type `String!`)
  """
  department_expr: String_Expr
  """
  ✨ Generated from Field `Service`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Service`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Service`.`isSubscription` of type `Boolean`
  """
  isSubscription: Boolean
  """
  ✨ `_expr` server value variant of `isSubscription` (✨ Generated from Field `Service`.`isSubscription` of type `Boolean`)
  """
  isSubscription_expr: Boolean_Expr
  """
  ✨ Generated from Field `Service`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Service`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Service`.`price` of type `Float`
  """
  price: Float
  """
  ✨ `_expr` server value variant of `price` (✨ Generated from Field `Service`.`price` of type `Float`)
  """
  price_expr: Float_Expr
  """
  ✨ `_update` server value variant of `price` (✨ Generated from Field `Service`.`price` of type `Float`)
  """
  price_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'Service'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Service_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Service_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Service_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Service_Filter!]
  """
  ✨ Generated from Field `Service`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Service`.`department` of type `String!`
  """
  department: String_Filter
  """
  ✨ Generated from Field `Service`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Service`.`isSubscription` of type `Boolean`
  """
  isSubscription: Boolean_Filter
  """
  ✨ Generated from Field `Service`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Service`.`price` of type `Float`
  """
  price: Float_Filter
  """
  ✨ Generated from Field `Service`.`aIInteractions_on_service` of type `[AIInteraction!]!`
  """
  aIInteractions_on_service: AIInteraction_ListFilter
  """
  ✨ Generated from Field `Service`.`requests_on_service` of type `[Request!]!`
  """
  requests_on_service: Request_ListFilter
}
"""
✨ Generated first-row input type for table 'Service'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Service_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Service_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Service_Filter
}
"""
✨ Generated having input type for table 'Service'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Service_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Service_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Service_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Service_Having!]
  """
  ✨ Generated from Field `Service`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Service`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`department_count` of type `Int!`
  """
  department_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`isSubscription_count` of type `Int!`
  """
  isSubscription_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`price_count` of type `Int!`
  """
  price_count: Int_Filter
  """
  ✨ Generated from Field `Service`.`price_sum` of type `Float`
  """
  price_sum: Float_Filter
  """
  ✨ Generated from Field `Service`.`price_avg` of type `Float`
  """
  price_avg: Float_Filter
  """
  ✨ Generated from Field `Service`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Service`.`price_min` of type `Float`
  """
  price_min: Float_Filter
  """
  ✨ Generated from Field `Service`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Service`.`price_max` of type `Float`
  """
  price_max: Float_Filter
}
"""
✨ Generated key input type for table 'Service'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Service_Key {
  """
  ✨ Generated from Field `Service`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Service`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Service'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Service_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Service_Filter
}
"""
✨ Generated order input type for table 'Service'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Service_Order {
  """
  ✨ Generated from Field `Service`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Service`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Service`.`department` of type `String!`
  """
  department: OrderDirection
  """
  ✨ Generated from Field `Service`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Service`.`isSubscription` of type `Boolean`
  """
  isSubscription: OrderDirection
  """
  ✨ Generated from Field `Service`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Service`.`price` of type `Float`
  """
  price: OrderDirection
  """
  ✨ Generated from Field `Service`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Service`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`department_count` of type `Int!`
  """
  department_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`isSubscription_count` of type `Int!`
  """
  isSubscription_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`price_count` of type `Int!`
  """
  price_count: OrderDirection
  """
  ✨ Generated from Field `Service`.`price_sum` of type `Float`
  """
  price_sum: OrderDirection
  """
  ✨ Generated from Field `Service`.`price_avg` of type `Float`
  """
  price_avg: OrderDirection
  """
  ✨ Generated from Field `Service`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Service`.`price_min` of type `Float`
  """
  price_min: OrderDirection
  """
  ✨ Generated from Field `Service`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Service`.`price_max` of type `Float`
  """
  price_max: OrderDirection
}
"""
✨ Generated data input type for table 'SubscriptionType'. It includes all necessary fields for creating or upserting rows into table.
"""
input SubscriptionType_Data {
  """
  ✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `SubscriptionType`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `SubscriptionType`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays` of type `Int!`
  """
  durationInDays: Int
  """
  ✨ `_expr` server value variant of `durationInDays` (✨ Generated from Field `SubscriptionType`.`durationInDays` of type `Int!`)
  """
  durationInDays_expr: Int_Expr
  """
  ✨ `_update` server value variant of `durationInDays` (✨ Generated from Field `SubscriptionType`.`durationInDays` of type `Int!`)
  """
  durationInDays_update: [Int_Update!]
  """
  ✨ Generated from Field `SubscriptionType`.`featuresIncluded` of type `[String]`
  """
  featuresIncluded: [String!]
  """
  ✨ `_update` server value variant of `featuresIncluded` (✨ Generated from Field `SubscriptionType`.`featuresIncluded` of type `[String]`)
  """
  featuresIncluded_update: [String_ListUpdate!]
  """
  ✨ Generated from Field `SubscriptionType`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `SubscriptionType`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `SubscriptionType`.`price` of type `Float!`
  """
  price: Float
  """
  ✨ `_expr` server value variant of `price` (✨ Generated from Field `SubscriptionType`.`price` of type `Float!`)
  """
  price_expr: Float_Expr
  """
  ✨ `_update` server value variant of `price` (✨ Generated from Field `SubscriptionType`.`price` of type `Float!`)
  """
  price_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'SubscriptionType'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input SubscriptionType_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [SubscriptionType_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: SubscriptionType_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [SubscriptionType_Filter!]
  """
  ✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays` of type `Int!`
  """
  durationInDays: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`featuresIncluded` of type `[String]`
  """
  featuresIncluded: String_ListFilter
  """
  ✨ Generated from Field `SubscriptionType`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price` of type `Float!`
  """
  price: Float_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`userSubscriptions_on_subscriptionType` of type `[UserSubscription!]!`
  """
  userSubscriptions_on_subscriptionType: UserSubscription_ListFilter
}
"""
✨ Generated first-row input type for table 'SubscriptionType'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input SubscriptionType_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [SubscriptionType_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: SubscriptionType_Filter
}
"""
✨ Generated having input type for table 'SubscriptionType'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input SubscriptionType_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [SubscriptionType_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: SubscriptionType_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [SubscriptionType_Having!]
  """
  ✨ Generated from Field `SubscriptionType`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_count` of type `Int!`
  """
  durationInDays_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price_count` of type `Int!`
  """
  price_count: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_sum` of type `Int`
  """
  durationInDays_sum: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price_sum` of type `Float`
  """
  price_sum: Float_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_avg` of type `Float`
  """
  durationInDays_avg: Float_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price_avg` of type `Float`
  """
  price_avg: Float_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_min` of type `Int`
  """
  durationInDays_min: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price_min` of type `Float`
  """
  price_min: Float_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_max` of type `Int`
  """
  durationInDays_max: Int_Filter
  """
  ✨ Generated from Field `SubscriptionType`.`price_max` of type `Float`
  """
  price_max: Float_Filter
}
"""
✨ Generated key input type for table 'SubscriptionType'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input SubscriptionType_Key {
  """
  ✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'SubscriptionType'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input SubscriptionType_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: SubscriptionType_Filter
}
"""
✨ Generated order input type for table 'SubscriptionType'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input SubscriptionType_Order {
  """
  ✨ Generated from Field `SubscriptionType`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays` of type `Int!`
  """
  durationInDays: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price` of type `Float!`
  """
  price: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_count` of type `Int!`
  """
  durationInDays_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price_count` of type `Int!`
  """
  price_count: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_sum` of type `Int`
  """
  durationInDays_sum: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price_sum` of type `Float`
  """
  price_sum: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_avg` of type `Float`
  """
  durationInDays_avg: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price_avg` of type `Float`
  """
  price_avg: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_min` of type `Int`
  """
  durationInDays_min: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price_min` of type `Float`
  """
  price_min: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`durationInDays_max` of type `Int`
  """
  durationInDays_max: OrderDirection
  """
  ✨ Generated from Field `SubscriptionType`.`price_max` of type `Float`
  """
  price_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: String
  """
  ✨ `_expr` server value variant of `phone` (✨ Generated from Field `User`.`phone` of type `String`)
  """
  phone_expr: String_Expr
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String
  """
  ✨ `_expr` server value variant of `photoUrl` (✨ Generated from Field `User`.`photoUrl` of type `String`)
  """
  photoUrl_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: String_Filter
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String_Filter
  """
  ✨ Generated from Field `User`.`aIInteractions_on_user` of type `[AIInteraction!]!`
  """
  aIInteractions_on_user: AIInteraction_ListFilter
  """
  ✨ Generated from Field `User`.`requests_on_user` of type `[Request!]!`
  """
  requests_on_user: Request_ListFilter
  """
  ✨ Generated from Field `User`.`userSubscriptions_on_user` of type `[UserSubscription!]!`
  """
  userSubscriptions_on_user: UserSubscription_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`phone_count` of type `Int!`
  """
  phone_count: Int_Filter
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`phone` of type `String`
  """
  phone: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`phone_count` of type `Int!`
  """
  phone_count: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'UserSubscription'. It includes all necessary fields for creating or upserting rows into table.
"""
input UserSubscription_Data {
  """
  ✨ Generated from Field `UserSubscription`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `UserSubscription`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionTypeId` of type `UUID!`
  """
  subscriptionTypeId: UUID
  """
  ✨ `_expr` server value variant of `subscriptionTypeId` (✨ Generated from Field `UserSubscription`.`subscriptionTypeId` of type `UUID!`)
  """
  subscriptionTypeId_expr: UUID_Expr
  """
  ✨ Generated from Field `UserSubscription`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `UserSubscription`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionType` of type `SubscriptionType!`
  """
  subscriptionType: SubscriptionType_Key
  """
  ✨ Generated from Field `UserSubscription`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`
  """
  endDate: Timestamp
  """
  ✨ `_expr` server value variant of `endDate` (✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`)
  """
  endDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `endDate` (✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`)
  """
  endDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `endDate` (✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`)
  """
  endDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`
  """
  startDate: Timestamp
  """
  ✨ `_expr` server value variant of `startDate` (✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`)
  """
  startDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `startDate` (✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`)
  """
  startDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `startDate` (✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`)
  """
  startDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `UserSubscription`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `UserSubscription`.`status` of type `String!`)
  """
  status_expr: String_Expr
}
"""
✨ Generated filter input type for table 'UserSubscription'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserSubscription_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [UserSubscription_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: UserSubscription_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [UserSubscription_Filter!]
  """
  ✨ Generated from Field `UserSubscription`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionTypeId` of type `UUID!`
  """
  subscriptionTypeId: UUID_Filter
  """
  ✨ Generated from Field `UserSubscription`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionType` of type `SubscriptionType!`
  """
  subscriptionType: SubscriptionType_Filter
  """
  ✨ Generated from Field `UserSubscription`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`
  """
  endDate: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`
  """
  startDate: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`status` of type `String!`
  """
  status: String_Filter
}
"""
✨ Generated first-row input type for table 'UserSubscription'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input UserSubscription_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [UserSubscription_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: UserSubscription_Filter
}
"""
✨ Generated having input type for table 'UserSubscription'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserSubscription_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [UserSubscription_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: UserSubscription_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [UserSubscription_Having!]
  """
  ✨ Generated from Field `UserSubscription`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`endDate_count` of type `Int!`
  """
  endDate_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`startDate_count` of type `Int!`
  """
  startDate_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionTypeId_count` of type `Int!`
  """
  subscriptionTypeId_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`endDate_min` of type `Timestamp`
  """
  endDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`startDate_min` of type `Timestamp`
  """
  startDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`endDate_max` of type `Timestamp`
  """
  endDate_max: Timestamp_Filter
  """
  ✨ Generated from Field `UserSubscription`.`startDate_max` of type `Timestamp`
  """
  startDate_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'UserSubscription'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input UserSubscription_Key {
  """
  ✨ Generated from Field `UserSubscription`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `UserSubscription`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'UserSubscription'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input UserSubscription_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: UserSubscription_Filter
}
"""
✨ Generated order input type for table 'UserSubscription'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input UserSubscription_Order {
  """
  ✨ Generated from Field `UserSubscription`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionTypeId` of type `UUID!`
  """
  subscriptionTypeId: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionType` of type `SubscriptionType!`
  """
  subscriptionType: SubscriptionType_Order
  """
  ✨ Generated from Field `UserSubscription`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `UserSubscription`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`endDate` of type `Timestamp!`
  """
  endDate: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`startDate` of type `Timestamp!`
  """
  startDate: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`endDate_count` of type `Int!`
  """
  endDate_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`startDate_count` of type `Int!`
  """
  startDate_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`subscriptionTypeId_count` of type `Int!`
  """
  subscriptionTypeId_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`endDate_min` of type `Timestamp`
  """
  endDate_min: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`startDate_min` of type `Timestamp`
  """
  startDate_min: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`endDate_max` of type `Timestamp`
  """
  endDate_max: OrderDirection
  """
  ✨ Generated from Field `UserSubscription`.`startDate_max` of type `Timestamp`
  """
  startDate_max: OrderDirection
}
